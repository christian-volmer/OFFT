
//          Copyright Christian Volmer 2022.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          https://www.boost.org/LICENSE_1_0.txt)

#include "../standard_module.h"

namespace offt {
namespace backend {

using std::size_t;
using std::ptrdiff_t;

template<typename valueT>
static void ComputeCore(Phasors<valueT> const &phasors, valueT *pReal, valueT *pImag, ptrdiff_t stride, size_t twiddleStart, size_t twiddleIncrement)
{
	valueT t0, t1, t2, t3, t4, t5, t6, t7, t8, t9;
	valueT t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
	valueT t20, t21, t22, t23, t24, t25, t26, t27, t28, t29;
	valueT t30, t31, t32, t33, t34, t35, t36, t37, t38, t39;
	valueT t40, t41, t42, t43, t44, t45, t46, t47, t48, t49;
	valueT t50, t51, t52, t53, t54, t55, t56, t57, t58, t59;
	valueT t60, t61, t62, t63, t64, t65, t66, t67, t68, t69;
	valueT t70, t71, t72, t73, t74, t75, t76, t77, t78, t79;
	valueT t80, t81, t82, t83, t84, t85, t86, t87, t88, t89;
	valueT t90, t91, t92, t93, t94, t95, t96, t97, t98, t99;
	valueT t100, t101, t102, t103, t104, t105, t106, t107, t108, t109;
	valueT t110, t111, t112, t113, t114, t115, t116, t117, t118, t119;
	valueT t120, t121, t122, t123, t124, t125, t126, t127, t128, t129;
	valueT t130, t131, t132, t133, t134, t135, t136, t137, t138, t139;
	valueT t140, t141, t142, t143, t144, t145, t146, t147, t148, t149;
	valueT t150, t151, t152, t153, t154, t155, t156, t157, t158, t159;
	valueT t160, t161;

	phasors.Multiply(t0, t1, pReal[0 * stride], pImag[0 * stride], twiddleStart + 0 * twiddleIncrement);
	phasors.Multiply(t2, t3, pReal[1 * stride], pImag[1 * stride], twiddleStart + 1 * twiddleIncrement);
	phasors.Multiply(t4, t5, pReal[2 * stride], pImag[2 * stride], twiddleStart + 2 * twiddleIncrement);
	phasors.Multiply(t6, t7, pReal[3 * stride], pImag[3 * stride], twiddleStart + 3 * twiddleIncrement);
	phasors.Multiply(t8, t9, pReal[4 * stride], pImag[4 * stride], twiddleStart + 4 * twiddleIncrement);
	phasors.Multiply(t10, t11, pReal[5 * stride], pImag[5 * stride], twiddleStart + 5 * twiddleIncrement);
	phasors.Multiply(t12, t13, pReal[6 * stride], pImag[6 * stride], twiddleStart + 6 * twiddleIncrement);
	phasors.Multiply(t14, t15, pReal[7 * stride], pImag[7 * stride], twiddleStart + 7 * twiddleIncrement);
	phasors.Multiply(t16, t17, pReal[8 * stride], pImag[8 * stride], twiddleStart + 8 * twiddleIncrement);
	phasors.Multiply(t18, t19, pReal[9 * stride], pImag[9 * stride], twiddleStart + 9 * twiddleIncrement);
	phasors.Multiply(t20, t21, pReal[10 * stride], pImag[10 * stride], twiddleStart + 10 * twiddleIncrement);
	phasors.Multiply(t22, t23, pReal[11 * stride], pImag[11 * stride], twiddleStart + 11 * twiddleIncrement);
	phasors.Multiply(t24, t25, pReal[12 * stride], pImag[12 * stride], twiddleStart + 12 * twiddleIncrement);
	phasors.Multiply(t26, t27, pReal[13 * stride], pImag[13 * stride], twiddleStart + 13 * twiddleIncrement);
	phasors.Multiply(t28, t29, pReal[14 * stride], pImag[14 * stride], twiddleStart + 14 * twiddleIncrement);
	phasors.Multiply(t30, t31, pReal[15 * stride], pImag[15 * stride], twiddleStart + 15 * twiddleIncrement);
	phasors.Multiply(t32, t33, pReal[16 * stride], pImag[16 * stride], twiddleStart + 16 * twiddleIncrement);
	phasors.Multiply(t34, t35, pReal[17 * stride], pImag[17 * stride], twiddleStart + 17 * twiddleIncrement);
	phasors.Multiply(t36, t37, pReal[18 * stride], pImag[18 * stride], twiddleStart + 18 * twiddleIncrement);
	phasors.Multiply(t38, t39, pReal[19 * stride], pImag[19 * stride], twiddleStart + 19 * twiddleIncrement);
	phasors.Multiply(t40, t41, pReal[20 * stride], pImag[20 * stride], twiddleStart + 20 * twiddleIncrement);
	phasors.Multiply(t42, t43, pReal[21 * stride], pImag[21 * stride], twiddleStart + 21 * twiddleIncrement);
	phasors.Multiply(t44, t45, pReal[22 * stride], pImag[22 * stride], twiddleStart + 22 * twiddleIncrement);
	phasors.Multiply(t46, t47, pReal[23 * stride], pImag[23 * stride], twiddleStart + 23 * twiddleIncrement);
	phasors.Multiply(t48, t49, pReal[24 * stride], pImag[24 * stride], twiddleStart + 24 * twiddleIncrement);
	phasors.Multiply(t50, t51, pReal[25 * stride], pImag[25 * stride], twiddleStart + 25 * twiddleIncrement);
	phasors.Multiply(t52, t53, pReal[26 * stride], pImag[26 * stride], twiddleStart + 26 * twiddleIncrement);
	phasors.Multiply(t54, t55, pReal[27 * stride], pImag[27 * stride], twiddleStart + 27 * twiddleIncrement);
	phasors.Multiply(t56, t57, pReal[28 * stride], pImag[28 * stride], twiddleStart + 28 * twiddleIncrement);
	phasors.Multiply(t58, t59, pReal[29 * stride], pImag[29 * stride], twiddleStart + 29 * twiddleIncrement);
	phasors.Multiply(t60, t61, pReal[30 * stride], pImag[30 * stride], twiddleStart + 30 * twiddleIncrement);

	t62 = t2 - t60;
	t63 = t3 - t61;
	t2 += t60;
	t3 += t61;
	t60 = t4 - t58;
	t61 = t5 - t59;
	t4 += t58;
	t5 += t59;
	t58 = t6 - t56;
	t59 = t7 - t57;
	t6 += t56;
	t7 += t57;
	t56 = t8 - t54;
	t57 = t9 - t55;
	t8 += t54;
	t9 += t55;
	t54 = t10 - t52;
	t55 = t11 - t53;
	t10 += t52;
	t11 += t53;
	t52 = t12 - t50;
	t53 = t13 - t51;
	t12 += t50;
	t13 += t51;
	t50 = t14 - t48;
	t51 = t15 - t49;
	t14 += t48;
	t15 += t49;
	t48 = t16 - t46;
	t49 = t17 - t47;
	t16 += t46;
	t17 += t47;
	t46 = t18 - t44;
	t47 = t19 - t45;
	t18 += t44;
	t19 += t45;
	t44 = t20 - t42;
	t45 = t21 - t43;
	t20 += t42;
	t21 += t43;
	t42 = t22 - t40;
	t43 = t23 - t41;
	t22 += t40;
	t23 += t41;
	t40 = t24 - t38;
	t41 = t25 - t39;
	t24 += t38;
	t25 += t39;
	t38 = t26 - t36;
	t39 = t27 - t37;
	t26 += t36;
	t27 += t37;
	t36 = t28 - t34;
	t37 = t29 - t35;
	t28 += t34;
	t29 += t35;
	t34 = t30 - t32;
	t35 = t31 - t33;
	t30 += t32;
	t31 += t33;
	t32 = t62 + t54 - t52;
	t33 = t63 + t55 - t53;
	t62 += t52;
	t63 += t53;
	t64 = t2 + t10 + t12;
	t65 = t3 + t11 + t13;
	t2 -= t12;
	t3 -= t13;
	t66 = t60 - t44;
	t67 = t61 - t45;
	t60 += t44 - t40;
	t61 += t45 - t41;
	t68 = t4 - t20;
	t69 = t5 - t21;
	t4 += t20 + t24;
	t5 += t21 + t25;
	t70 = t58 - t38;
	t71 = t59 - t39;
	t58 += t38 + t34;
	t59 += t39 + t35;
	t72 = t6 - t26;
	t73 = t7 - t27;
	t6 += t26 + t30;
	t7 += t27 + t31;
	t74 = t56 - t50;
	t75 = t57 - t51;
	t56 += t50 - t42;
	t57 += t51 - t43;
	t76 = t8 - t14;
	t77 = t9 - t15;
	t8 += t14 + t22;
	t9 += t15 + t23;
	t54 += t52;
	t55 += t53;
	t10 -= t12;
	t11 -= t13;
	t50 += t42;
	t51 += t43;
	t14 -= t22;
	t15 -= t23;
	t12 = t48 - t46;
	t13 = t49 - t47;
	t46 = t48 + t46 + t36;
	t47 = t49 + t47 + t37;
	t48 -= t36;
	t49 -= t37;
	t22 = t16 - t18;
	t23 = t17 - t19;
	t18 = t16 + t18 + t28;
	t19 = t17 + t19 + t29;
	t16 -= t28;
	t17 -= t29;
	t44 += t40;
	t45 += t41;
	t20 -= t24;
	t21 -= t25;
	t38 -= t34;
	t39 -= t35;
	t26 -= t30;
	t27 -= t31;
	t24 = t32 - t60;
	t25 = t33 - t61;
	t28 = t32 + t60 - t58 + t56 + t46;
	t29 = t33 + t61 - t59 + t57 + t47;
	t32 -= t46;
	t33 -= t47;
	t30 = t62 + t66 + t74 + t50 + t38;
	t31 = t63 + t67 + t75 + t51 + t39;
	t62 -= t66 - t50;
	t63 -= t67 - t51;
	t34 = t64 - t4;
	t35 = t65 - t5;
	t36 = t64 + t4 + t6 + t8 + t18;
	t37 = t65 + t5 + t7 + t9 + t19;
	t64 -= t18;
	t65 -= t19;
	t40 = t2 + t68 + t76 + t14 - t26;
	t41 = t3 + t69 + t77 + t15 - t27;
	t2 -= t68 - t14;
	t3 -= t69 - t15;
	t74 = t66 - t74 - t50;
	t75 = t67 - t75 - t51;
	t42 = t66 - t50 - t48;
	t43 = t67 - t51 - t49;
	t52 = t66 - t12;
	t53 = t67 - t13;
	t66 -= t38;
	t67 -= t39;
	t38 = t60 + t58;
	t39 = t61 + t59;
	t78 = t60 - t56;
	t79 = t61 - t57;
	t60 -= t46;
	t61 -= t47;
	t76 = t68 - t76 - t14;
	t77 = t69 - t77 - t15;
	t46 = t68 - t14 - t16;
	t47 = t69 - t15 - t17;
	t80 = t68 - t22;
	t81 = t69 - t23;
	t68 += t26;
	t69 += t27;
	t26 = t4 - t6;
	t27 = t5 - t7;
	t82 = t4 - t8;
	t83 = t5 - t9;
	t4 -= t18;
	t5 -= t19;
	t18 = t70 + t50;
	t19 = t71 + t51;
	t70 -= t50 - t48 - t44;
	t71 -= t51 - t49 - t45;
	t58 += t56;
	t59 += t57;
	t48 = t72 - t14;
	t49 = t73 - t15;
	t72 += t14 - t16 - t20;
	t73 += t15 - t17 - t21;
	t6 -= t8;
	t7 -= t9;
	t8 = t54 + t50;
	t9 = t55 + t51;
	t54 -= t12;
	t55 -= t13;
	t12 = t10 + t14;
	t13 = t11 + t15;
	t10 -= t22;
	t11 -= t23;
	t50 += t44;
	t51 += t45;
	t14 += t20;
	t15 += t21;
	t16 = t24 + t38;
	t17 = t25 + t39;
	t20 = t32 + t58;
	t21 = t33 + t59;
	t22 = t30 + t70;
	t23 = t31 + t71;
	t30 -= t54;
	t31 -= t55;
	t44 = t62 + t50;
	t45 = t63 + t51;
	t56 = t34 + t26;
	t57 = t35 + t27;
	t84 = t64 - t6;
	t85 = t65 - t7;
	t86 = t40 - t72;
	t87 = t41 - t73;
	t40 -= t10;
	t41 -= t11;
	t88 = t2 + t14;
	t89 = t3 + t15;
	t90 = t74 + t42;
	t91 = t75 + t43;
	t92 = t52 + t66;
	t93 = t53 + t67;
	t94 = t78 - t60;
	t95 = t79 - t61;
	t96 = t76 + t46;
	t97 = t77 + t47;
	t98 = t80 + t68;
	t99 = t81 + t69;
	t100 = t82 - t4;
	t101 = t83 - t5;
	t102 = t18 + t8;
	t103 = t19 + t9;
	t70 += t54;
	t71 += t55;
	t54 = t48 - t12;
	t55 = t49 - t13;
	t72 -= t10;
	t73 -= t11;
	t10 = t62 - t52;
	t11 = t63 - t53;
	t104 = t44 - t92;
	t105 = t45 - t93;
	t106 = t2 - t80;
	t107 = t3 - t81;
	t108 = t88 - t98;
	t109 = t89 - t99;
	t110 = t74 - t18;
	t111 = t75 - t19;
	t112 = t90 - t102;
	t113 = t91 - t103;
	t114 = t42 - t8;
	t115 = t43 - t9;
	t116 = t66 - t50;
	t117 = t67 - t51;
	t118 = t76 + t48;
	t119 = t77 + t49;
	t120 = t96 + t54;
	t121 = t97 + t55;
	t122 = t46 - t12;
	t123 = t47 - t13;
	t124 = t68 - t14;
	t125 = t69 - t15;
	t0 += t36;
	t1 += t37;
	t126 = t62 + t18;
	t127 = t63 + t19;
	t128 = t10 - t110;
	t129 = t11 - t111;
	t130 = t44 + t102;
	t131 = t45 + t103;
	t132 = t104 - t112;
	t133 = t105 - t113;
	t134 = t2 - t48;
	t135 = t3 - t49;
	t136 = t106 - t118;
	t137 = t107 - t119;
	t138 = t88 - t54;
	t139 = t89 - t55;
	t140 = t108 - t120;
	t141 = t109 - t121;
	t142 = t74 + t52;
	t143 = t75 + t53;
	t144 = t90 + t92;
	t145 = t91 + t93;
	t146 = t42 + t66;
	t147 = t43 + t67;
	t148 = t114 + t116;
	t149 = t115 + t117;
	t150 = t76 + t80;
	t151 = t77 + t81;
	t152 = t96 + t98;
	t153 = t97 + t99;
	t154 = t46 + t68;
	t155 = t47 + t69;
	t156 = t122 + t124;
	t157 = t123 + t125;
	t158 = t8 + t50;
	t159 = t9 + t51;
	t160 = t12 + t14;
	t161 = t13 + t15;
	t25 *= valueT(0.028003825226278612524);
	t24 *= valueT(0.028003825226278612524);
	t17 *= valueT(0.44960199918659236354);
	t16 *= valueT(0.44960199918659236354);
	t29 *= valueT(0.1855921454276673974);
	t28 *= valueT(0.1855921454276673974);
	t33 *= valueT(0.69169641702138115261);
	t32 *= valueT(0.69169641702138115261);
	t21 *= valueT(0.12190297944551019458);
	t20 *= valueT(0.12190297944551019458);
	t23 *= valueT(0.36010442196019251578);
	t22 *= valueT(0.36010442196019251578);
	t31 *= valueT(0.10209749786491606369);
	t30 *= valueT(0.10209749786491606369);
	t63 *= valueT(0.48563392596301227479);
	t62 *= valueT(0.48563392596301227479);
	t127 *= valueT(0.94727161807823812287);
	t126 *= valueT(0.94727161807823812287);
	t11 *= valueT(0.20070432531015444602);
	t10 *= valueT(0.20070432531015444602);
	t129 *= valueT(0.063372700190678029143);
	t128 *= valueT(0.063372700190678029143);
	t45 *= valueT(0.13510539545348763997);
	t44 *= valueT(0.13510539545348763997);
	t131 *= valueT(0.61323183974773681073);
	t130 *= valueT(0.61323183974773681073);
	t105 *= valueT(0.069180450948261354806);
	t104 *= valueT(0.069180450948261354806);
	t133 *= valueT(0.09591803806998788565);
	t132 *= valueT(0.09591803806998788565);
	t34 *= valueT(0.060064820876731527434);
	t35 *= valueT(0.060064820876731527434);
	t56 *= valueT(0.20672126143220018382);
	t57 *= valueT(0.20672126143220018382);
	t36 *= valueT(1.0333333333333333333);
	t37 *= valueT(1.0333333333333333333);
	t64 *= valueT(0.27571741448829390525);
	t65 *= valueT(0.27571741448829390525);
	t84 *= valueT(0.1094295713442001291);
	t85 *= valueT(0.1094295713442001291);
	t86 *= valueT(0.045346848173899962232);
	t87 *= valueT(0.045346848173899962232);
	t40 *= valueT(0.29637372110299413755);
	t41 *= valueT(0.29637372110299413755);
	t2 *= valueT(0.079462773150105537224);
	t3 *= valueT(0.079462773150105537224);
	t134 *= valueT(1.2031704748403782682);
	t135 *= valueT(1.2031704748403782682);
	t106 *= valueT(0.74206619582135048323);
	t107 *= valueT(0.74206619582135048323);
	t136 *= valueT(0.21916197727239584931);
	t137 *= valueT(0.21916197727239584931);
	t88 *= valueT(1.8906929393063390177);
	t89 *= valueT(1.8906929393063390177);
	t138 *= valueT(0.28357409243845733892);
	t139 *= valueT(0.28357409243845733892);
	t108 *= valueT(1.4774178156193771214);
	t109 *= valueT(1.4774178156193771214);
	t140 *= valueT(0.49031208906032152155);
	t141 *= valueT(0.49031208906032152155);
	t75 *= valueT(1.5982638575965406979);
	t74 *= valueT(1.5982638575965406979);
	t143 *= valueT(0.69527553837249884361);
	t142 *= valueT(0.69527553837249884361);
	t111 *= valueT(1.6418596909010899102);
	t110 *= valueT(1.6418596909010899102);
	t91 *= valueT(1.9885780293806821384);
	t90 *= valueT(1.9885780293806821384);
	t145 *= valueT(0.17316507770589176757);
	t144 *= valueT(0.17316507770589176757);
	t113 *= valueT(1.2962863977457801234);
	t112 *= valueT(1.2962863977457801234);
	t43 *= valueT(0.58155196403300016044);
	t42 *= valueT(0.58155196403300016044);
	t147 *= valueT(0.66642591651767262721);
	t146 *= valueT(0.66642591651767262721);
	t115 *= valueT(1.512449024865104052);
	t114 *= valueT(1.512449024865104052);
	t149 *= valueT(0.29740466526154981383);
	t148 *= valueT(0.29740466526154981383);
	t53 *= valueT(0.87262522759979267887);
	t52 *= valueT(0.87262522759979267887);
	t93 *= valueT(1.3467958502599574745);
	t92 *= valueT(1.3467958502599574745);
	t67 *= valueT(1.1369254479631532131);
	t66 *= valueT(1.1369254479631532131);
	t117 *= valueT(0.88571167013882141603);
	t116 *= valueT(0.88571167013882141603);
	t39 *= valueT(0.14819526361555720701);
	t38 *= valueT(0.14819526361555720701);
	t79 *= valueT(0.56979343757587095803);
	t78 *= valueT(0.56979343757587095803);
	t95 *= valueT(0.026292284170047012433);
	t94 *= valueT(0.026292284170047012433);
	t61 *= valueT(0.57150497863210255812);
	t60 *= valueT(0.57150497863210255812);
	t76 *= valueT(1.5666835642099196222);
	t77 *= valueT(1.5666835642099196222);
	t150 *= valueT(0.65821141590286972344);
	t151 *= valueT(0.65821141590286972344);
	t118 *= valueT(1.2310035970367574306);
	t119 *= valueT(1.2310035970367574306);
	t96 *= valueT(0.43745282575182779832);
	t97 *= valueT(0.43745282575182779832);
	t152 *= valueT(0.18032330749307986855);
	t153 *= valueT(0.18032330749307986855);
	t120 *= valueT(0.88214058851585702392);
	t121 *= valueT(0.88214058851585702392);
	t46 *= valueT(0.56977486221042705878);
	t47 *= valueT(0.56977486221042705878);
	t154 *= valueT(0.072512966228835363662);
	t155 *= valueT(0.072512966228835363662);
	t122 *= valueT(1.0845187363974908033);
	t123 *= valueT(1.0845187363974908033);
	t156 *= valueT(0.71880081799217585657);
	t157 *= valueT(0.71880081799217585657);
	t80 *= valueT(0.87653442241044649176);
	t81 *= valueT(0.87653442241044649176);
	t98 *= valueT(1.1986109185215112337);
	t99 *= valueT(1.1986109185215112337);
	t68 *= valueT(1.5062583125249073474);
	t69 *= valueT(1.5062583125249073474);
	t124 *= valueT(1.9318541783406036209);
	t125 *= valueT(1.9318541783406036209);
	t26 *= valueT(0.65193306814142574562);
	t27 *= valueT(0.65193306814142574562);
	t82 *= valueT(0.38514698583249403436);
	t83 *= valueT(0.38514698583249403436);
	t100 *= valueT(0.76136263948562587472);
	t101 *= valueT(0.76136263948562587472);
	t4 *= valueT(0.31615083277640031293);
	t5 *= valueT(0.31615083277640031293);
	t19 *= valueT(0.62062914789405339961);
	t18 *= valueT(0.62062914789405339961);
	t103 *= valueT(0.56039893280632889617);
	t102 *= valueT(0.56039893280632889617);
	t71 *= valueT(0.25800692409527645209);
	t70 *= valueT(0.25800692409527645209);
	t59 *= valueT(0.1499068046717888071);
	t58 *= valueT(0.1499068046717888071);
	t48 *= valueT(0.33157536347293794701);
	t49 *= valueT(0.33157536347293794701);
	t54 *= valueT(1.6625083184530484411);
	t55 *= valueT(1.6625083184530484411);
	t72 *= valueT(0.34172056927689409979);
	t73 *= valueT(0.34172056927689409979);
	t6 *= valueT(0.04936475046746860167);
	t7 *= valueT(0.04936475046746860167);
	t9 *= valueT(1.4688531915605548397);
	t8 *= valueT(1.4688531915605548397);
	t159 *= valueT(0.33449817292027100063);
	t158 *= valueT(0.33449817292027100063);
	t12 *= valueT(1.4201987035706529949);
	t13 *= valueT(1.4201987035706529949);
	t160 *= valueT(0.15857257518308971618);
	t161 *= valueT(0.15857257518308971618);
	t51 *= valueT(1.9590412230487685409);
	t50 *= valueT(1.9590412230487685409);
	t14 *= valueT(2.0663224049296996294);
	t15 *= valueT(2.0663224049296996294);
	t36 = t0 - t36;
	t37 = t1 - t37;
	t63 -= t127;
	t62 -= t126;
	t127 += t19;
	t126 += t18;
	t11 -= t129;
	t10 -= t128;
	t129 -= t111;
	t128 -= t110;
	t45 -= t131;
	t44 -= t130;
	t131 += t103;
	t130 += t102;
	t105 -= t133;
	t104 -= t132;
	t133 += t113;
	t132 += t112;
	t2 -= t134;
	t3 -= t135;
	t134 -= t48;
	t135 -= t49;
	t106 -= t136;
	t107 -= t137;
	t136 += t118;
	t137 += t119;
	t88 -= t138;
	t89 -= t139;
	t138 += t54;
	t139 += t55;
	t108 -= t140;
	t109 -= t141;
	t140 += t120;
	t141 += t121;
	t75 += t143;
	t74 += t142;
	t143 += t53;
	t142 += t52;
	t91 -= t145;
	t90 -= t144;
	t145 -= t93;
	t144 -= t92;
	t43 += t147;
	t42 += t146;
	t147 += t67;
	t146 += t66;
	t115 -= t149;
	t114 -= t148;
	t149 -= t117;
	t148 -= t116;
	t76 += t150;
	t77 += t151;
	t150 += t80;
	t151 += t81;
	t96 += t152;
	t97 += t153;
	t152 += t98;
	t153 += t99;
	t46 += t154;
	t47 += t155;
	t154 += t68;
	t155 += t69;
	t122 -= t156;
	t123 -= t157;
	t156 -= t124;
	t157 -= t125;
	t9 += t159;
	t8 += t158;
	t159 += t51;
	t158 += t50;
	t12 += t160;
	t13 += t161;
	t160 += t14;
	t161 += t15;
	t63 -= t11;
	t62 -= t10;
	t127 -= t129;
	t126 -= t128;
	t11 -= t143;
	t10 -= t142;
	t129 += t75;
	t128 += t74;
	t45 += t105;
	t44 += t104;
	t131 += t133;
	t130 += t132;
	t105 -= t145;
	t104 -= t144;
	t133 -= t91;
	t132 -= t90;
	t2 += t106;
	t3 += t107;
	t134 += t136;
	t135 += t137;
	t106 += t150;
	t107 += t151;
	t136 -= t76;
	t137 -= t77;
	t88 -= t108;
	t89 -= t109;
	t138 -= t140;
	t139 -= t141;
	t108 += t152;
	t109 += t153;
	t140 -= t96;
	t141 -= t97;
	t43 -= t115;
	t42 -= t114;
	t147 += t149;
	t146 += t148;
	t115 += t9;
	t114 += t8;
	t149 -= t159;
	t148 -= t158;
	t46 -= t122;
	t47 -= t123;
	t154 += t156;
	t155 += t157;
	t122 += t12;
	t123 += t13;
	t156 -= t160;
	t157 -= t161;
	t25 -= t17;
	t24 -= t16;
	t17 += t39;
	t16 += t38;
	t33 -= t21;
	t32 -= t20;
	t21 -= t59;
	t20 -= t58;
	t8 = t23 - t31;
	t9 = t22 - t30;
	t23 -= t71;
	t22 -= t70;
	t31 -= t71;
	t30 -= t70;
	t63 -= t45;
	t62 -= t44;
	t127 -= t131;
	t126 -= t130;
	t11 += t105;
	t10 += t104;
	t129 += t133;
	t128 += t132;
	t45 -= t149;
	t44 -= t148;
	t131 -= t115;
	t130 -= t114;
	t105 -= t147;
	t104 -= t146;
	t133 += t43;
	t132 += t42;
	t34 += t56;
	t35 += t57;
	t56 -= t26;
	t57 -= t27;
	t64 += t84;
	t65 += t85;
	t84 += t6;
	t85 += t7;
	t6 = t86 + t40;
	t7 = t87 + t41;
	t86 += t72;
	t87 += t73;
	t40 -= t72;
	t41 -= t73;
	t2 += t88;
	t3 += t89;
	t134 += t138;
	t135 += t139;
	t106 -= t108;
	t107 -= t109;
	t136 -= t140;
	t137 -= t141;
	t88 += t156;
	t89 += t157;
	t138 += t122;
	t139 += t123;
	t108 -= t154;
	t109 -= t155;
	t140 += t46;
	t141 += t47;
	t79 -= t95;
	t78 -= t94;
	t95 -= t61;
	t94 -= t60;
	t82 -= t100;
	t83 -= t101;
	t100 += t4;
	t101 += t5;
	t4 = t36 - t34 + t56 + t82 + t100;
	t5 = t37 - t35 + t57 + t83 + t101;
	t34 = t36 + t34 + t64;
	t35 = t37 + t35 + t65;
	t56 = t36 - t56 - t84;
	t57 = t37 - t57 - t85;
	t64 = t36 - t64 - t100;
	t65 = t37 - t65 - t101;
	t36 += t84 - t82;
	t37 += t85 - t83;
	t12 = t25 + t17 + t29 - t79 - t95;
	t13 = t24 + t16 + t28 - t78 - t94;
	t25 -= t29 - t33;
	t24 -= t28 - t32;
	t17 -= t29 - t21;
	t16 -= t28 - t20;
	t33 = t29 + t33 + t95;
	t32 = t28 + t32 + t94;
	t29 += t21 + t79;
	t28 += t20 + t78;
	t14 = t8 - t23 + t63 - t127 + t129 - t45 + t131 + t133;
	t15 = t9 - t22 + t62 - t126 + t128 - t44 + t130 + t132;
	t18 = t8 + t63;
	t19 = t9 + t62;
	t63 = t8 - t63 + t11 - t129 + t105 - t133;
	t62 = t9 - t62 + t10 - t128 + t104 - t132;
	t129 = t8 + t129;
	t128 = t9 + t128;
	t8 -= t105;
	t9 -= t104;
	t127 = t23 - t127;
	t126 = t22 - t126;
	t45 = t23 - t45;
	t44 = t22 - t44;
	t23 += t133;
	t22 += t132;
	t11 = t31 + t11;
	t10 = t30 + t10;
	t31 += t131;
	t30 += t130;
	t20 = t6 - t86 + t2 - t134 - t136 + t88 - t138 + t140;
	t21 = t7 - t87 + t3 - t135 - t137 + t89 - t139 + t141;
	t26 = t6 + t2;
	t27 = t7 + t3;
	t2 = t6 - t2 - t106 + t136 + t108 - t140;
	t3 = t7 - t3 - t107 + t137 + t109 - t141;
	t136 = t6 - t136;
	t137 = t7 - t137;
	t6 -= t108;
	t7 -= t109;
	t134 = t86 - t134;
	t135 = t87 - t135;
	t88 = t86 + t88;
	t89 = t87 + t89;
	t86 += t140;
	t87 += t141;
	t106 = t40 + t106;
	t107 = t41 + t107;
	t40 += t138;
	t41 += t139;
	t38 = t4 + t2;
	t39 = t5 + t3;
	t2 = t4 - t2 + t88;
	t3 = t5 - t3 + t89;
	t4 -= t88;
	t5 -= t89;
	t42 = t34 + t26;
	t43 = t35 + t27;
	t26 = t34 - t26 + t40;
	t27 = t35 - t27 + t41;
	t34 -= t40;
	t35 -= t41;
	t40 = t56 + t6;
	t41 = t57 + t7;
	t6 = t56 - t6 + t134;
	t7 = t57 - t7 + t135;
	t56 -= t134;
	t57 -= t135;
	t46 = t64 - t86;
	t47 = t65 - t87;
	t86 = t64 + t86 + t106;
	t87 = t65 + t87 + t107;
	t64 -= t106;
	t65 -= t107;
	t48 = t36 - t20;
	t49 = t37 - t21;
	t20 = t36 + t20 - t136;
	t21 = t37 + t21 - t137;
	t36 += t136;
	t37 += t137;
	t50 = t12 + t63;
	t51 = t13 + t62;
	t63 = t12 - t63 + t45;
	t62 = t13 - t62 + t44;
	t12 -= t45;
	t13 -= t44;
	t44 = t25 - t18;
	t45 = t24 - t19;
	t18 = t25 + t18 + t31;
	t19 = t24 + t19 + t30;
	t25 -= t31;
	t24 -= t30;
	t30 = t17 - t8;
	t31 = t16 - t9;
	t8 = t17 + t8 - t127;
	t9 = t16 + t9 - t126;
	t17 += t127;
	t16 += t126;
	t52 = t33 - t23;
	t53 = t32 - t22;
	t23 = t33 + t23 - t11;
	t22 = t32 + t22 - t10;
	t33 += t11;
	t32 += t10;
	t10 = t29 - t14;
	t11 = t28 - t15;
	t14 = t29 + t14 - t129;
	t15 = t28 + t15 - t128;
	t29 += t129;
	t28 += t128;
	pReal[0 * stride] = t0;
	pImag[0 * stride] = t1;
	pReal[1 * stride] = t42 + t44;
	pImag[1 * stride] = t43 - t45;
	pReal[2 * stride] = t38 - t50;
	pImag[2 * stride] = t39 + t51;
	pReal[3 * stride] = t56 - t17;
	pImag[3 * stride] = t57 + t16;
	pReal[4 * stride] = t36 - t29;
	pImag[4 * stride] = t37 + t28;
	pReal[5 * stride] = t34 + t25;
	pImag[5 * stride] = t35 - t24;
	pReal[6 * stride] = t26 - t18;
	pImag[6 * stride] = t27 + t19;
	pReal[7 * stride] = t20 - t14;
	pImag[7 * stride] = t21 + t15;
	pReal[8 * stride] = t86 - t23;
	pImag[8 * stride] = t87 + t22;
	pReal[9 * stride] = t64 - t33;
	pImag[9 * stride] = t65 + t32;
	pReal[10 * stride] = t2 - t63;
	pImag[10 * stride] = t3 + t62;
	pReal[11 * stride] = t48 + t10;
	pImag[11 * stride] = t49 - t11;
	pReal[12 * stride] = t4 + t12;
	pImag[12 * stride] = t5 - t13;
	pReal[13 * stride] = t6 - t8;
	pImag[13 * stride] = t7 + t9;
	pReal[14 * stride] = t46 - t52;
	pImag[14 * stride] = t47 + t53;
	pReal[15 * stride] = t40 - t30;
	pImag[15 * stride] = t41 + t31;
	pReal[16 * stride] = t40 + t30;
	pImag[16 * stride] = t41 - t31;
	pReal[17 * stride] = t46 + t52;
	pImag[17 * stride] = t47 - t53;
	pReal[18 * stride] = t6 + t8;
	pImag[18 * stride] = t7 - t9;
	pReal[19 * stride] = t4 - t12;
	pImag[19 * stride] = t5 + t13;
	pReal[20 * stride] = t48 - t10;
	pImag[20 * stride] = t49 + t11;
	pReal[21 * stride] = t2 + t63;
	pImag[21 * stride] = t3 - t62;
	pReal[22 * stride] = t64 + t33;
	pImag[22 * stride] = t65 - t32;
	pReal[23 * stride] = t86 + t23;
	pImag[23 * stride] = t87 - t22;
	pReal[24 * stride] = t20 + t14;
	pImag[24 * stride] = t21 - t15;
	pReal[25 * stride] = t26 + t18;
	pImag[25 * stride] = t27 - t19;
	pReal[26 * stride] = t34 - t25;
	pImag[26 * stride] = t35 + t24;
	pReal[27 * stride] = t36 + t29;
	pImag[27 * stride] = t37 - t28;
	pReal[28 * stride] = t56 + t17;
	pImag[28 * stride] = t57 - t16;
	pReal[29 * stride] = t38 + t50;
	pImag[29 * stride] = t39 - t51;
	pReal[30 * stride] = t42 - t44;
	pImag[30 * stride] = t43 + t45;
}

template<> void StandardModule<float, 31>::Compute(float *pReal, float *pImag, ptrdiff_t stride, size_t twiddleStart, size_t twiddleIncrement) const
{
	ComputeCore(mPhasors, pReal, pImag, stride, twiddleStart, twiddleIncrement);
}

template<> void StandardModule<double, 31>::Compute(double *pReal, double *pImag, ptrdiff_t stride, size_t twiddleStart, size_t twiddleIncrement) const
{
	ComputeCore(mPhasors, pReal, pImag, stride, twiddleStart, twiddleIncrement);
}

}
}
