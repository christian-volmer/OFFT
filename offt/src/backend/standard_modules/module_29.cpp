
//          Copyright Christian Volmer 2022, 2023.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          https://www.boost.org/LICENSE_1_0.txt)

#include "../standard_module.h"

namespace offt {
namespace backend {

/*
	Number of additions       : 798
	Number of multiplications : 190
*/

template<> StandardModuleComplexity const StandardModule<float, 29>::Complexity = { 798, 190 };
template<> StandardModuleComplexity const StandardModule<double, 29>::Complexity = { 798, 190 };

template<typename valueT>
static void ComputeCore(Phasors<valueT> const &phasors, valueT *pReal, valueT *pImag, ptrdiff_t stride, size_t twiddleStart, size_t twiddleIncrement)
{
	valueT t0, t1, t2, t3, t4, t5, t6, t7, t8, t9;
	valueT t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
	valueT t20, t21, t22, t23, t24, t25, t26, t27, t28, t29;
	valueT t30, t31, t32, t33, t34, t35, t36, t37, t38, t39;
	valueT t40, t41, t42, t43, t44, t45, t46, t47, t48, t49;
	valueT t50, t51, t52, t53, t54, t55, t56, t57, t58, t59;
	valueT t60, t61, t62, t63, t64, t65, t66, t67, t68, t69;
	valueT t70, t71, t72, t73, t74, t75, t76, t77, t78, t79;
	valueT t80, t81, t82, t83, t84, t85, t86, t87, t88, t89;
	valueT t90, t91, t92, t93, t94, t95, t96, t97, t98, t99;
	valueT t100, t101, t102, t103, t104, t105, t106, t107, t108, t109;
	valueT t110, t111, t112, t113, t114, t115, t116, t117, t118, t119;
	valueT t120, t121, t122, t123, t124, t125, t126, t127, t128, t129;
	valueT t130, t131, t132, t133, t134, t135, t136, t137, t138, t139;
	valueT t140, t141, t142, t143, t144, t145, t146, t147, t148, t149;
	valueT t150, t151, t152, t153, t154, t155, t156, t157, t158, t159;
	valueT t160, t161, t162, t163, t164, t165, t166, t167, t168, t169;
	valueT t170, t171, t172, t173, t174, t175, t176, t177, t178, t179;
	valueT t180, t181, t182, t183, t184, t185, t186, t187, t188, t189;
	valueT t190, t191;

	phasors.Multiply(t0, t1, pReal[0 * stride], pImag[0 * stride], twiddleStart + 0 * twiddleIncrement);
	phasors.Multiply(t2, t3, pReal[1 * stride], pImag[1 * stride], twiddleStart + 1 * twiddleIncrement);
	phasors.Multiply(t4, t5, pReal[2 * stride], pImag[2 * stride], twiddleStart + 2 * twiddleIncrement);
	phasors.Multiply(t6, t7, pReal[3 * stride], pImag[3 * stride], twiddleStart + 3 * twiddleIncrement);
	phasors.Multiply(t8, t9, pReal[4 * stride], pImag[4 * stride], twiddleStart + 4 * twiddleIncrement);
	phasors.Multiply(t10, t11, pReal[5 * stride], pImag[5 * stride], twiddleStart + 5 * twiddleIncrement);
	phasors.Multiply(t12, t13, pReal[6 * stride], pImag[6 * stride], twiddleStart + 6 * twiddleIncrement);
	phasors.Multiply(t14, t15, pReal[7 * stride], pImag[7 * stride], twiddleStart + 7 * twiddleIncrement);
	phasors.Multiply(t16, t17, pReal[8 * stride], pImag[8 * stride], twiddleStart + 8 * twiddleIncrement);
	phasors.Multiply(t18, t19, pReal[9 * stride], pImag[9 * stride], twiddleStart + 9 * twiddleIncrement);
	phasors.Multiply(t20, t21, pReal[10 * stride], pImag[10 * stride], twiddleStart + 10 * twiddleIncrement);
	phasors.Multiply(t22, t23, pReal[11 * stride], pImag[11 * stride], twiddleStart + 11 * twiddleIncrement);
	phasors.Multiply(t24, t25, pReal[12 * stride], pImag[12 * stride], twiddleStart + 12 * twiddleIncrement);
	phasors.Multiply(t26, t27, pReal[13 * stride], pImag[13 * stride], twiddleStart + 13 * twiddleIncrement);
	phasors.Multiply(t28, t29, pReal[14 * stride], pImag[14 * stride], twiddleStart + 14 * twiddleIncrement);
	phasors.Multiply(t30, t31, pReal[15 * stride], pImag[15 * stride], twiddleStart + 15 * twiddleIncrement);
	phasors.Multiply(t32, t33, pReal[16 * stride], pImag[16 * stride], twiddleStart + 16 * twiddleIncrement);
	phasors.Multiply(t34, t35, pReal[17 * stride], pImag[17 * stride], twiddleStart + 17 * twiddleIncrement);
	phasors.Multiply(t36, t37, pReal[18 * stride], pImag[18 * stride], twiddleStart + 18 * twiddleIncrement);
	phasors.Multiply(t38, t39, pReal[19 * stride], pImag[19 * stride], twiddleStart + 19 * twiddleIncrement);
	phasors.Multiply(t40, t41, pReal[20 * stride], pImag[20 * stride], twiddleStart + 20 * twiddleIncrement);
	phasors.Multiply(t42, t43, pReal[21 * stride], pImag[21 * stride], twiddleStart + 21 * twiddleIncrement);
	phasors.Multiply(t44, t45, pReal[22 * stride], pImag[22 * stride], twiddleStart + 22 * twiddleIncrement);
	phasors.Multiply(t46, t47, pReal[23 * stride], pImag[23 * stride], twiddleStart + 23 * twiddleIncrement);
	phasors.Multiply(t48, t49, pReal[24 * stride], pImag[24 * stride], twiddleStart + 24 * twiddleIncrement);
	phasors.Multiply(t50, t51, pReal[25 * stride], pImag[25 * stride], twiddleStart + 25 * twiddleIncrement);
	phasors.Multiply(t52, t53, pReal[26 * stride], pImag[26 * stride], twiddleStart + 26 * twiddleIncrement);
	phasors.Multiply(t54, t55, pReal[27 * stride], pImag[27 * stride], twiddleStart + 27 * twiddleIncrement);
	phasors.Multiply(t56, t57, pReal[28 * stride], pImag[28 * stride], twiddleStart + 28 * twiddleIncrement);

	t58 = t2 - t56;
	t59 = t3 - t57;
	t2 += t56;
	t3 += t57;
	t56 = t4 - t54;
	t57 = t5 - t55;
	t4 += t54;
	t5 += t55;
	t54 = t6 - t52;
	t55 = t7 - t53;
	t6 += t52;
	t7 += t53;
	t52 = t8 - t50;
	t53 = t9 - t51;
	t8 += t50;
	t9 += t51;
	t50 = t10 - t48;
	t51 = t11 - t49;
	t10 += t48;
	t11 += t49;
	t48 = t12 - t46;
	t49 = t13 - t47;
	t12 += t46;
	t13 += t47;
	t46 = t14 - t44;
	t47 = t15 - t45;
	t14 += t44;
	t15 += t45;
	t44 = t16 - t42;
	t45 = t17 - t43;
	t16 += t42;
	t17 += t43;
	t42 = t18 - t40;
	t43 = t19 - t41;
	t18 += t40;
	t19 += t41;
	t40 = t20 - t38;
	t41 = t21 - t39;
	t20 += t38;
	t21 += t39;
	t38 = t22 - t36;
	t39 = t23 - t37;
	t22 += t36;
	t23 += t37;
	t36 = t24 - t34;
	t37 = t25 - t35;
	t24 += t34;
	t25 += t35;
	t34 = t26 - t32;
	t35 = t27 - t33;
	t26 += t32;
	t27 += t33;
	t32 = t28 - t30;
	t33 = t29 - t31;
	t28 += t30;
	t29 += t31;
	t30 = t58 - t52 - t50 - t48 + t46 - t42 - t34;
	t31 = t59 - t53 - t51 - t49 + t47 - t43 - t35;
	t60 = t2 - t24;
	t61 = t3 - t25;
	t2 += t24;
	t3 += t25;
	t24 = t56 + t54 - t44 - t40 + t38 - t36 + t32;
	t25 = t57 + t55 - t45 - t41 + t39 - t37 + t33;
	t56 -= t32;
	t57 -= t33;
	t62 = t4 - t10;
	t63 = t5 - t11;
	t4 += t10;
	t5 += t11;
	t54 -= t32;
	t55 -= t33;
	t10 = t6 - t14;
	t11 = t7 - t15;
	t6 += t14;
	t7 += t15;
	t14 = t8 - t20;
	t15 = t9 - t21;
	t8 += t20;
	t9 += t21;
	t20 = t12 - t28;
	t21 = t13 - t29;
	t12 += t28;
	t13 += t29;
	t44 += t32;
	t45 += t33;
	t28 = t16 - t18;
	t29 = t17 - t19;
	t16 += t18;
	t17 += t19;
	t40 += t32;
	t41 += t33;
	t38 -= t32;
	t39 -= t33;
	t18 = t22 - t26;
	t19 = t23 - t27;
	t22 += t26;
	t23 += t27;
	t36 += t32;
	t37 += t33;
	t26 = t58 + t52;
	t27 = t59 + t53;
	t58 -= t46;
	t59 -= t47;
	t32 = t30 - t24;
	t33 = t31 - t25;
	t64 = t60 - t62 - t10 + t14 + t20 - t28 - t18;
	t65 = t61 - t63 - t11 + t15 + t21 - t29 - t19;
	t60 -= t20;
	t61 -= t21;
	t66 = t2 + t4 + t6 + t8 + t12 + t16 + t22;
	t67 = t3 + t5 + t7 + t9 + t13 + t17 + t23;
	t2 -= t12;
	t3 -= t13;
	t62 += t20;
	t63 += t21;
	t4 -= t12;
	t5 -= t13;
	t68 = t54 + t44;
	t69 = t55 + t45;
	t10 += t20;
	t11 += t21;
	t6 -= t12;
	t7 -= t13;
	t52 += t46;
	t53 += t47;
	t14 -= t20;
	t15 -= t21;
	t8 -= t12;
	t9 -= t13;
	t70 = t50 - t48;
	t71 = t51 - t49;
	t50 += t46;
	t51 += t47;
	t48 += t46;
	t49 += t47;
	t28 = t20 + t28;
	t29 = t21 + t29;
	t20 += t18;
	t21 += t19;
	t16 = t12 - t16;
	t17 = t13 - t17;
	t12 -= t22;
	t13 -= t23;
	t42 = t46 + t42;
	t43 = t47 + t43;
	t46 += t34;
	t47 += t35;
	t18 = t40 + t38;
	t19 = t41 + t39;
	t22 = t26 - t56;
	t23 = t27 - t57;
	t26 += t56;
	t27 += t57;
	t34 = t58 - t56;
	t35 = t59 - t57;
	t72 = t60 + t14;
	t73 = t61 + t15;
	t74 = t2 + t8;
	t75 = t3 + t9;
	t76 = t68 - t46;
	t77 = t69 - t47;
	t68 += t46;
	t69 += t47;
	t78 = t10 + t28;
	t79 = t11 + t29;
	t80 = t6 - t16;
	t81 = t7 - t17;
	t82 = t70 - t36;
	t83 = t71 - t37;
	t70 += t36;
	t71 += t37;
	t84 = t48 - t36;
	t85 = t49 - t37;
	t86 = t42 + t40;
	t87 = t43 + t41;
	t88 = t42 - t18;
	t89 = t43 - t19;
	t18 = t42 + t18;
	t19 = t43 + t19;
	t90 = t46 + t44;
	t91 = t47 + t45;
	t92 = t22 - t68;
	t93 = t23 - t69;
	t94 = t26 - t76;
	t95 = t27 - t77;
	t96 = t58 - t44;
	t97 = t59 - t45;
	t98 = t34 - t90;
	t99 = t35 - t91;
	t100 = t60 - t62;
	t101 = t61 - t63;
	t102 = t72 - t62;
	t103 = t73 - t63;
	t72 += t62;
	t73 += t63;
	t104 = t2 - t4;
	t105 = t3 - t5;
	t106 = t74 - t4;
	t107 = t75 - t5;
	t74 += t4;
	t75 += t5;
	t108 = t56 + t46;
	t109 = t57 + t47;
	t110 = t54 - t52;
	t111 = t55 - t53;
	t112 = t78 - t20;
	t113 = t79 - t21;
	t78 += t20;
	t79 += t21;
	t114 = t80 - t12;
	t115 = t81 - t13;
	t80 += t12;
	t81 += t13;
	t116 = t82 + t88;
	t117 = t83 + t89;
	t118 = t70 - t18;
	t119 = t71 - t19;
	t120 = t50 - t38;
	t121 = t51 - t39;
	t122 = t48 + t40;
	t123 = t49 + t41;
	t124 = t84 + t86;
	t125 = t85 + t87;
	t126 = t28 + t20;
	t127 = t29 + t21;
	t128 = t16 - t12;
	t129 = t17 - t13;
	t130 = t42 - t36;
	t131 = t43 - t37;
	t0 += t66;
	t1 += t67;
	t132 = t22 + t70;
	t133 = t23 + t71;
	t134 = t92 + t118;
	t135 = t93 + t119;
	t136 = t26 + t82;
	t137 = t27 + t83;
	t138 = t94 + t116;
	t139 = t95 + t117;
	t140 = t58 - t48;
	t141 = t59 - t49;
	t142 = t96 - t122;
	t143 = t97 - t123;
	t144 = t34 - t84;
	t145 = t35 - t85;
	t146 = t98 - t124;
	t147 = t99 - t125;
	t148 = t60 - t28;
	t149 = t61 - t29;
	t150 = t100 - t126;
	t151 = t101 - t127;
	t152 = t102 - t78;
	t153 = t103 - t79;
	t154 = t72 - t112;
	t155 = t73 - t113;
	t156 = t2 + t16;
	t157 = t3 + t17;
	t158 = t104 + t128;
	t159 = t105 + t129;
	t160 = t106 - t80;
	t161 = t107 - t81;
	t162 = t74 - t114;
	t163 = t75 - t115;
	t164 = t56 - t36;
	t165 = t57 - t37;
	t166 = t108 + t130;
	t167 = t109 + t131;
	t168 = t62 + t20;
	t169 = t63 + t21;
	t170 = t4 + t12;
	t171 = t5 + t13;
	t172 = t54 + t38;
	t173 = t55 + t39;
	t174 = t110 - t120;
	t175 = t111 - t121;
	t176 = t76 - t88;
	t177 = t77 - t89;
	t178 = t68 + t18;
	t179 = t69 + t19;
	t180 = t10 - t14;
	t181 = t11 - t15;
	t182 = t6 - t8;
	t183 = t7 - t9;
	t184 = t52 + t50;
	t185 = t53 + t51;
	t186 = t42 + t46;
	t187 = t43 + t47;
	t188 = t86 + t90;
	t189 = t87 + t91;
	t190 = t44 + t40;
	t191 = t45 + t41;
	t23 *= valueT(1.1625480818665135035);
	t22 *= valueT(1.1625480818665135035);
	t133 *= valueT(0.94376904290313171197);
	t132 *= valueT(0.94376904290313171197);
	t93 *= valueT(1.0223043250150024759);
	t92 *= valueT(1.0223043250150024759);
	t135 *= valueT(1.0683440129113842558);
	t134 *= valueT(1.0683440129113842558);
	t27 *= valueT(0.95867284888846891676);
	t26 *= valueT(0.95867284888846891676);
	t137 *= valueT(0.32246947409067704954);
	t136 *= valueT(0.32246947409067704954);
	t95 *= valueT(0.93977908135534434873);
	t94 *= valueT(0.93977908135534434873);
	t139 *= valueT(0.30790347065166901294);
	t138 *= valueT(0.30790347065166901294);
	t59 *= valueT(0.96543040775604257462);
	t58 *= valueT(0.96543040775604257462);
	t141 *= valueT(1.4699023801136408761);
	t140 *= valueT(1.4699023801136408761);
	t97 *= valueT(1.1107454486452416332);
	t96 *= valueT(1.1107454486452416332);
	t143 *= valueT(0.81949220594907459462);
	t142 *= valueT(0.81949220594907459462);
	t35 *= valueT(0.57610278233688463497);
	t34 *= valueT(0.57610278233688463497);
	t145 *= valueT(0.37277585506313716507);
	t144 *= valueT(0.37277585506313716507);
	t99 *= valueT(1.352408216689535356);
	t98 *= valueT(1.352408216689535356);
	t147 *= valueT(0.82498483345819123117);
	t146 *= valueT(0.82498483345819123117);
	t31 *= valueT(0.45045515311822135399);
	t30 *= valueT(0.45045515311822135399);
	t33 *= valueT(0.0727410834062919498);
	t32 *= valueT(0.0727410834062919498);
	t64 *= valueT(0.19232731454051800112);
	t65 *= valueT(0.19232731454051800112);
	t60 *= valueT(0.58060338567942270123);
	t61 *= valueT(0.58060338567942270123);
	t148 *= valueT(1.0084609866381643029);
	t149 *= valueT(1.0084609866381643029);
	t100 *= valueT(0.6262565773796173661);
	t101 *= valueT(0.6262565773796173661);
	t150 *= valueT(0.74166198747162600814);
	t151 *= valueT(0.74166198747162600814);
	t102 *= valueT(0.12012626319842654196);
	t103 *= valueT(0.12012626319842654196);
	t152 *= valueT(0.062399279899679448541);
	t153 *= valueT(0.062399279899679448541);
	t72 *= valueT(0.85513749043379157219);
	t73 *= valueT(0.85513749043379157219);
	t154 *= valueT(0.5009051132009516625);
	t155 *= valueT(0.5009051132009516625);
	t66 *= valueT(1.0357142857142857143);
	t67 *= valueT(1.0357142857142857143);
	t2 *= valueT(0.19386149913902821259);
	t3 *= valueT(0.19386149913902821259);
	t156 *= valueT(1.1645955853322674351);
	t157 *= valueT(1.1645955853322674351);
	t104 *= valueT(0.4804324838913158808);
	t105 *= valueT(0.4804324838913158808);
	t158 *= valueT(0.47351952224039725733);
	t159 *= valueT(0.47351952224039725733);
	t106 *= valueT(0.54874024105708110331);
	t107 *= valueT(0.54874024105708110331);
	t160 *= valueT(0.39421039822905001498);
	t161 *= valueT(0.39421039822905001498);
	t74 *= valueT(0.0090960727732564037059);
	t75 *= valueT(0.0090960727732564037059);
	t162 *= valueT(0.066619874630766335383);
	t163 *= valueT(0.066619874630766335383);
	t25 *= valueT(0.30497298630563745439);
	t24 *= valueT(0.30497298630563745439);
	t57 *= valueT(0.57610278233688463497);
	t56 *= valueT(0.57610278233688463497);
	t165 *= valueT(0.37277585506313716507);
	t164 *= valueT(0.37277585506313716507);
	t109 *= valueT(1.352408216689535356);
	t108 *= valueT(1.352408216689535356);
	t167 *= valueT(0.82498483345819123117);
	t166 *= valueT(0.82498483345819123117);
	t62 *= valueT(0.6262565773796173661);
	t63 *= valueT(0.6262565773796173661);
	t168 *= valueT(0.74166198747162600814);
	t169 *= valueT(0.74166198747162600814);
	t4 *= valueT(0.4804324838913158808);
	t5 *= valueT(0.4804324838913158808);
	t170 *= valueT(0.47351952224039725733);
	t171 *= valueT(0.47351952224039725733);
	t55 *= valueT(1.9714952686068235984);
	t54 *= valueT(1.9714952686068235984);
	t173 *= valueT(1.149537168597195368);
	t172 *= valueT(1.149537168597195368);
	t111 *= valueT(0.7061981192606216299);
	t110 *= valueT(0.7061981192606216299);
	t175 *= valueT(0.94130064408994895572);
	t174 *= valueT(0.94130064408994895572);
	t77 *= valueT(0.23325121083175671283);
	t76 *= valueT(0.23325121083175671283);
	t177 *= valueT(0.23475387679308598613);
	t176 *= valueT(0.23475387679308598613);
	t69 *= valueT(0.94775651748494840434);
	t68 *= valueT(0.94775651748494840434);
	t179 *= valueT(1.1183711753895827281);
	t178 *= valueT(1.1183711753895827281);
	t10 *= valueT(1.1723105344069424317);
	t11 *= valueT(1.1723105344069424317);
	t180 *= valueT(1.2877159444989510738);
	t181 *= valueT(1.2877159444989510738);
	t112 *= valueT(0.088970030922107431786);
	t113 *= valueT(0.088970030922107431786);
	t78 *= valueT(0.062423558152422220936);
	t79 *= valueT(0.062423558152422220936);
	t6 *= valueT(1.3191863035059950549);
	t7 *= valueT(1.3191863035059950549);
	t182 *= valueT(0.36523429737428191673);
	t183 *= valueT(0.36523429737428191673);
	t114 *= valueT(0.46787993029260016536);
	t115 *= valueT(0.46787993029260016536);
	t80 *= valueT(0.71665655846687549571);
	t81 *= valueT(0.71665655846687549571);
	t53 *= valueT(1.4372232982598195581);
	t52 *= valueT(1.4372232982598195581);
	t185 *= valueT(1.9983612689289045119);
	t184 *= valueT(1.9983612689289045119);
	t14 *= valueT(2.0028314592008918711);
	t15 *= valueT(2.0028314592008918711);
	t8 *= valueT(1.2451582386369712029);
	t9 *= valueT(1.2451582386369712029);
	t83 *= valueT(1.3513758108910238651);
	t82 *= valueT(1.3513758108910238651);
	t117 *= valueT(0.17834551870392280354);
	t116 *= valueT(0.17834551870392280354);
	t71 *= valueT(1.4216326551609725698);
	t70 *= valueT(1.4216326551609725698);
	t119 *= valueT(1.4961804626910266413);
	t118 *= valueT(1.4961804626910266413);
	t51 *= valueT(2.4427679339713280105);
	t50 *= valueT(2.4427679339713280105);
	t121 *= valueT(1.177470784625126042);
	t120 *= valueT(1.177470784625126042);
	t49 *= valueT(4.207744468725357903);
	t48 *= valueT(4.207744468725357903);
	t123 *= valueT(0.72407239762015454749);
	t122 *= valueT(0.72407239762015454749);
	t85 *= valueT(0.72023069602016977662);
	t84 *= valueT(0.72023069602016977662);
	t125 *= valueT(1.1510202792979488592);
	t124 *= valueT(1.1510202792979488592);
	t28 *= valueT(0.47049654017752359027);
	t29 *= valueT(0.47049654017752359027);
	t126 *= valueT(1.0541141783383589678);
	t127 *= valueT(1.0541141783383589678);
	t20 *= valueT(1.0541141783383589678);
	t21 *= valueT(1.0541141783383589678);
	t16 *= valueT(2.199110244768684341);
	t17 *= valueT(2.199110244768684341);
	t128 *= valueT(0.45673744217887117294);
	t129 *= valueT(0.45673744217887117294);
	t12 *= valueT(0.45673744217887117294);
	t13 *= valueT(0.45673744217887117294);
	t43 *= valueT(0.71263251733048594545);
	t42 *= valueT(0.71263251733048594545);
	t187 *= valueT(0.15149454666140099157);
	t186 *= valueT(0.15149454666140099157);
	t131 *= valueT(1.1510202792979488592);
	t130 *= valueT(1.1510202792979488592);
	t87 *= valueT(0.71263251733048594545);
	t86 *= valueT(0.71263251733048594545);
	t189 *= valueT(0.15149454666140099157);
	t188 *= valueT(0.15149454666140099157);
	t89 *= valueT(1.2353272144376894755);
	t88 *= valueT(1.2353272144376894755);
	t19 *= valueT(1.6177191996875069966);
	t18 *= valueT(1.6177191996875069966);
	t47 *= valueT(0.51884275862858327983);
	t46 *= valueT(0.51884275862858327983);
	t91 *= valueT(0.51884275862858327983);
	t90 *= valueT(0.51884275862858327983);
	t45 *= valueT(3.8210714177002708172);
	t44 *= valueT(3.8210714177002708172);
	t191 *= valueT(1.8229300743337223851);
	t190 *= valueT(1.8229300743337223851);
	t41 *= valueT(2.2106707410646592313);
	t40 *= valueT(2.2106707410646592313);
	t39 *= valueT(2.4773412066737595288);
	t38 *= valueT(2.4773412066737595288);
	t37 *= valueT(0.72023069602016977662);
	t36 *= valueT(0.72023069602016977662);
	t66 = t0 - t66;
	t67 = t1 - t67;
	t23 -= t133;
	t22 -= t132;
	t133 -= t71;
	t132 -= t70;
	t93 -= t135;
	t92 -= t134;
	t135 -= t119;
	t134 -= t118;
	t27 += t137;
	t26 += t136;
	t137 -= t83;
	t136 -= t82;
	t95 -= t139;
	t94 -= t138;
	t139 += t117;
	t138 += t116;
	t59 -= t141;
	t58 -= t140;
	t141 += t49;
	t140 += t48;
	t97 -= t143;
	t96 -= t142;
	t143 += t123;
	t142 += t122;
	t35 += t145;
	t34 += t144;
	t145 += t85;
	t144 += t84;
	t99 -= t147;
	t98 -= t146;
	t147 += t125;
	t146 += t124;
	t60 -= t148;
	t61 -= t149;
	t148 += t28;
	t149 += t29;
	t100 -= t150;
	t101 -= t151;
	t150 += t126;
	t151 += t127;
	t102 -= t152;
	t103 -= t153;
	t152 += t78;
	t153 += t79;
	t72 -= t154;
	t73 -= t155;
	t154 += t112;
	t155 += t113;
	t2 -= t156;
	t3 -= t157;
	t156 -= t16;
	t157 -= t17;
	t104 += t158;
	t105 += t159;
	t158 -= t128;
	t159 -= t129;
	t106 -= t160;
	t107 -= t161;
	t160 += t80;
	t161 += t81;
	t74 += t162;
	t75 += t163;
	t162 += t114;
	t163 += t115;
	t57 += t165;
	t56 += t164;
	t165 += t37;
	t164 += t36;
	t109 -= t167;
	t108 -= t166;
	t167 -= t131;
	t166 -= t130;
	t62 -= t168;
	t63 -= t169;
	t168 -= t20;
	t169 -= t21;
	t4 += t170;
	t5 += t171;
	t170 -= t12;
	t171 -= t13;
	t55 -= t173;
	t54 -= t172;
	t173 -= t39;
	t172 -= t38;
	t111 -= t175;
	t110 -= t174;
	t175 += t121;
	t174 += t120;
	t77 -= t177;
	t76 -= t176;
	t177 += t89;
	t176 += t88;
	t69 -= t179;
	t68 -= t178;
	t179 -= t19;
	t178 -= t18;
	t10 -= t180;
	t11 -= t181;
	t180 += t14;
	t181 += t15;
	t6 -= t182;
	t7 -= t183;
	t182 += t8;
	t183 += t9;
	t53 -= t185;
	t52 -= t184;
	t185 -= t51;
	t184 -= t50;
	t43 -= t187;
	t42 -= t186;
	t187 += t47;
	t186 += t46;
	t87 -= t189;
	t86 -= t188;
	t189 += t91;
	t188 += t90;
	t45 -= t191;
	t44 -= t190;
	t191 -= t41;
	t190 -= t40;
	t23 -= t93;
	t22 -= t92;
	t133 -= t135;
	t132 -= t134;
	t93 += t69;
	t92 += t68;
	t135 += t179;
	t134 += t178;
	t27 -= t95;
	t26 -= t94;
	t137 += t139;
	t136 += t138;
	t95 -= t77;
	t94 -= t76;
	t139 -= t177;
	t138 -= t176;
	t59 += t97;
	t58 += t96;
	t141 += t143;
	t140 += t142;
	t97 -= t45;
	t96 -= t44;
	t143 -= t191;
	t142 -= t190;
	t35 -= t99;
	t34 -= t98;
	t145 += t147;
	t144 += t146;
	t99 -= t189;
	t98 -= t188;
	t147 -= t87;
	t146 -= t86;
	t60 -= t100;
	t61 -= t101;
	t148 -= t150;
	t149 -= t151;
	t100 += t102 - t72 + t62;
	t101 += t103 - t73 + t63;
	t150 += t152 - t154 + t168;
	t151 += t153 - t155 + t169;
	t102 += t72;
	t103 += t73;
	t152 += t154;
	t153 += t155;
	t2 += t104;
	t3 += t105;
	t156 -= t158;
	t157 -= t159;
	t104 -= t106 + t74 - t4;
	t105 -= t107 + t75 - t5;
	t158 += t160 - t162 + t170;
	t159 += t161 - t163 + t171;
	t106 -= t74;
	t107 -= t75;
	t160 += t162;
	t161 += t163;
	t57 -= t109;
	t56 -= t108;
	t165 += t167;
	t164 += t166;
	t109 += t187;
	t108 += t186;
	t167 += t43;
	t166 += t42;
	t55 -= t111;
	t54 -= t110;
	t173 -= t175;
	t172 -= t174;
	t111 += t53;
	t110 += t52;
	t175 += t185;
	t174 += t184;
	t4 = t23 - t27;
	t5 = t22 - t26;
	t23 += t27 - t35 - t57;
	t22 += t26 - t34 - t56;
	t8 = t133 + t137;
	t9 = t132 + t136;
	t133 -= t137 - t145 - t165;
	t132 -= t136 - t144 - t164;
	t12 = t93 - t95;
	t13 = t92 - t94;
	t93 += t95 - t99 - t109;
	t92 += t94 - t98 - t108;
	t14 = t135 - t139;
	t15 = t134 - t138;
	t135 += t139 - t147 - t167;
	t134 += t138 - t146 - t166;
	t59 += t35;
	t58 += t34;
	t141 -= t145;
	t140 -= t144;
	t97 -= t99;
	t96 -= t98;
	t143 -= t147;
	t142 -= t146;
	t60 -= t102;
	t61 -= t103;
	t148 -= t152;
	t149 -= t153;
	t102 -= t180;
	t103 -= t181;
	t152 -= t10;
	t153 -= t11;
	t2 -= t106;
	t3 -= t107;
	t156 -= t160;
	t157 -= t161;
	t106 -= t182;
	t107 -= t183;
	t160 -= t6;
	t161 -= t7;
	t6 = t66 - t2;
	t7 = t67 - t3;
	t2 = t66 + t2 + t156 - t104 + t158 - t106 - t160;
	t3 = t67 + t3 + t157 - t105 + t159 - t107 - t161;
	t156 = t66 - t156;
	t157 = t67 - t157;
	t104 = t66 + t104;
	t105 = t67 + t105;
	t158 = t66 - t158;
	t159 = t67 - t159;
	t106 = t66 + t106;
	t107 = t67 + t107;
	t66 += t160;
	t67 += t161;
	t10 = t4 - t59;
	t11 = t5 - t58;
	t4 -= t111;
	t5 -= t110;
	t16 = t8 - t141;
	t17 = t9 - t140;
	t8 -= t175;
	t9 -= t174;
	t97 = t12 + t97;
	t96 = t13 + t96;
	t12 -= t55;
	t13 -= t54;
	t59 = t93 - t135 + t59 - t141 - t111 + t175;
	t58 = t92 - t134 + t58 - t140 - t110 + t174;
	t143 = t14 + t143;
	t142 = t15 + t142;
	t14 -= t173;
	t15 -= t172;
	t31 -= t33;
	t30 -= t32;
	t33 -= t25;
	t32 -= t24;
	t18 = t64 - t60;
	t19 = t65 - t61;
	t60 = t64 + t60 - t148 - t100 + t150 - t102 + t152;
	t61 = t65 + t61 - t149 - t101 + t151 - t103 + t153;
	t148 = t64 + t148;
	t149 = t65 + t149;
	t100 = t64 + t100;
	t101 = t65 + t101;
	t150 = t64 - t150;
	t151 = t65 - t151;
	t102 = t64 + t102;
	t103 = t65 + t103;
	t64 -= t152;
	t65 -= t153;
	t20 = t6 + t18;
	t21 = t7 + t19;
	t6 -= t18;
	t7 -= t19;
	t18 = t2 + t60;
	t19 = t3 + t61;
	t2 -= t60;
	t3 -= t61;
	t24 = t156 + t148;
	t25 = t157 + t149;
	t156 -= t148;
	t157 -= t149;
	t26 = t104 - t100;
	t27 = t105 - t101;
	t104 += t100;
	t105 += t101;
	t28 = t158 + t150;
	t29 = t159 + t151;
	t158 -= t150;
	t159 -= t151;
	t34 = t106 + t102;
	t35 = t107 + t103;
	t106 -= t102;
	t107 -= t103;
	t36 = t66 + t64;
	t37 = t67 + t65;
	t66 -= t64;
	t67 -= t65;
	t10 += t31;
	t11 += t30;
	t4 -= t31;
	t5 -= t30;
	t38 = t23 - t133 + t97 - t12 - t143 + t14 + t33;
	t39 = t22 - t132 + t96 - t13 - t142 + t15 + t32;
	t23 -= t33;
	t22 -= t32;
	t16 -= t31;
	t17 -= t30;
	t8 += t31;
	t9 += t30;
	t133 += t33;
	t132 += t32;
	t97 -= t33;
	t96 -= t32;
	t12 += t33;
	t13 += t32;
	t93 -= t31;
	t92 -= t30;
	t59 += t31;
	t58 += t30;
	t143 += t33;
	t142 += t32;
	t14 -= t33;
	t15 -= t32;
	t135 += t31;
	t134 += t30;
	pReal[0 * stride] = t0;
	pImag[0 * stride] = t1;
	pReal[1 * stride] = t20 + t10;
	pImag[1 * stride] = t21 - t11;
	pReal[2 * stride] = t26 - t23;
	pImag[2 * stride] = t27 + t22;
	pReal[3 * stride] = t66 + t12;
	pImag[3 * stride] = t67 - t13;
	pReal[4 * stride] = t34 + t4;
	pImag[4 * stride] = t35 - t5;
	pReal[5 * stride] = t104 - t8;
	pImag[5 * stride] = t105 + t9;
	pReal[6 * stride] = t18 + t16;
	pImag[6 * stride] = t19 - t17;
	pReal[7 * stride] = t36 + t59;
	pImag[7 * stride] = t37 - t58;
	pReal[8 * stride] = t156 + t97;
	pImag[8 * stride] = t157 - t96;
	pReal[9 * stride] = t24 - t135;
	pImag[9 * stride] = t25 + t134;
	pReal[10 * stride] = t106 - t143;
	pImag[10 * stride] = t107 + t142;
	pReal[11 * stride] = t158 - t14;
	pImag[11 * stride] = t159 + t15;
	pReal[12 * stride] = t6 - t133;
	pImag[12 * stride] = t7 + t132;
	pReal[13 * stride] = t28 + t93;
	pImag[13 * stride] = t29 - t92;
	pReal[14 * stride] = t2 + t38;
	pImag[14 * stride] = t3 - t39;
	pReal[15 * stride] = t2 - t38;
	pImag[15 * stride] = t3 + t39;
	pReal[16 * stride] = t28 - t93;
	pImag[16 * stride] = t29 + t92;
	pReal[17 * stride] = t6 + t133;
	pImag[17 * stride] = t7 - t132;
	pReal[18 * stride] = t158 + t14;
	pImag[18 * stride] = t159 - t15;
	pReal[19 * stride] = t106 + t143;
	pImag[19 * stride] = t107 - t142;
	pReal[20 * stride] = t24 + t135;
	pImag[20 * stride] = t25 - t134;
	pReal[21 * stride] = t156 - t97;
	pImag[21 * stride] = t157 + t96;
	pReal[22 * stride] = t36 - t59;
	pImag[22 * stride] = t37 + t58;
	pReal[23 * stride] = t18 - t16;
	pImag[23 * stride] = t19 + t17;
	pReal[24 * stride] = t104 + t8;
	pImag[24 * stride] = t105 - t9;
	pReal[25 * stride] = t34 - t4;
	pImag[25 * stride] = t35 + t5;
	pReal[26 * stride] = t66 - t12;
	pImag[26 * stride] = t67 + t13;
	pReal[27 * stride] = t26 + t23;
	pImag[27 * stride] = t27 - t22;
	pReal[28 * stride] = t20 - t10;
	pImag[28 * stride] = t21 + t11;
}

template<> void StandardModule<float, 29>::Compute(float *pReal, float *pImag, ptrdiff_t stride, size_t twiddleStart, size_t twiddleIncrement) const
{
	ComputeCore(mPhasors, pReal, pImag, stride, twiddleStart, twiddleIncrement);
}

template<> void StandardModule<double, 29>::Compute(double *pReal, double *pImag, ptrdiff_t stride, size_t twiddleStart, size_t twiddleIncrement) const
{
	ComputeCore(mPhasors, pReal, pImag, stride, twiddleStart, twiddleIncrement);
}

}
}
